version: "3"

services:
  asteroids_swag:
    container_name: asteroids_swag
    image: lscr.io/linuxserver/swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - URL=asteroids-ba.duckdns.org
      - VALIDATION=duckdns
      - DUCKDNSTOKEN=993de60e-d20f-47ca-8464-018ce7a8a380
      - STAGING=false
    volumes:
      - swag_config:/config
      - ./ops/swag/nginx.conf:/config/nginx/site-confs/default.conf
      - /data/nginx/cache
    ports:
      - 6123:443
    restart: unless-stopped

  asteroids_client_1:
    container_name: asteroids_client_1
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - asteroids_signalr

  asteroids_client_2:
    container_name: asteroids_client_2
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - asteroids_signalr
    

  asteroids_actor_system_1:
    container_name: asteroids_actor_system_1
    build:
      context: .
      dockerfile: ./actorSystem/Dockerfile
    restart: unless-stopped
    depends_on:
      - asteroids_signalr
    environment:
      SIGNALR_URL: http://asteroids_signalr:8081/ws
      CLUSTER_CONFIG: |
        akka {
          actor {
            provider = cluster
          }
          remote {
            dot-netty.tcp {
              hostname = "actor-system-1"
              port = 2551
            }
          }
          cluster {
            seed-nodes = [
              "akka.tcp://asteroid-system@actor-system-1:2551"
              "akka.tcp://asteroid-system@actor-system-2:2551"
              "akka.tcp://asteroid-system@actor-system-3:2551"
            ]
            roles = ["lobby"]
          }
        }
      RAFT_GATEWAY_URL: http://raft-gateway:8080
    
  asteroids_actor_system_2:
    container_name: asteroids_actor_system_2
    build:
      context: .
      dockerfile: ./actorSystem/Dockerfile
    restart: unless-stopped
    depends_on:
      - asteroids_signalr
    environment:
      SIGNALR_URL: http://asteroids_signalr:8081/ws
      CLUSTER_CONFIG: |
        akka {
          actor {
            provider = cluster
          }
          remote {
            dot-netty.tcp {
              hostname = "actor-system-2"
              port = 2551
            }
          }
          cluster {
            seed-nodes = [
              "akka.tcp://asteroid-system@actor-system-1:2551"
              "akka.tcp://asteroid-system@actor-system-2:2551"
              "akka.tcp://asteroid-system@actor-system-3:2551"
            ]
            roles = ["lobby"]
          }
        }
      RAFT_GATEWAY_URL: http://raft-gateway:8080

  asteroids_actor_system_3:
    container_name: asteroids_actor_system_3
    build:
      context: .
      dockerfile: ./actorSystem/Dockerfile
    restart: unless-stopped
    depends_on:
      - asteroids_signalr
    environment:
      SIGNALR_URL: http://asteroids_signalr:8081/ws
      CLUSTER_CONFIG: |
        akka {
          actor {
            provider = cluster
          }
          remote {
            dot-netty.tcp {
              hostname = "actor-system-2"
              port = 2551
            }
          }
          cluster {
            seed-nodes = [
              "akka.tcp://asteroid-system@actor-system-1:2551"
              "akka.tcp://asteroid-system@actor-system-2:2551"
              "akka.tcp://asteroid-system@actor-system-3:2551"
            ]
            roles = ["lobby"]
          }
        }
      RAFT_GATEWAY_URL: http://raft-gateway:8080

  asteroids_signalr:
    container_name: asteroids_signalr
    build:
      context: .
      dockerfile: ./signalR/Dockerfile
    restart: unless-stopped

  asteroids_grafana:
    image: grafana/grafana:latest
    container_name: asteroids_grafana
    user: 1000:1000
    ports:
      - 6001:3000
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./ops/grafana-datasource.yml:/etc/grafana/provisioning/datasources/grafana-datasource.yml
      - ./ops/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/grafana-dashboards.yml
      - ../dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped

  asteroids_prometheus:
    image: prom/prometheus:latest
    container_name: asteroids_prometheus
    ports:
      - 6002:9090
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  asteroids_loki:
    image: grafana/loki:latest
    container_name: asteroids_loki
    ports:
      - 6003:3100
    restart: unless-stopped

  asteroids_zipkin:
    image: openzipkin/zipkin:latest
    container_name: asteroids_zipkin
    ports:
      - 6004:9411
    restart: unless-stopped

  asteroids_otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: asteroids_otel-collector
    volumes:
      - ./ops/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1887:1888 # pprof extension
      - 8887:8888 # Prometheus metrics exposed by the Collector
      - 8886:8889 # Prometheus exporter metrics
      - 13132:13133 # health_check extension
      - 4316:4317 # OTLP gRPC receiver
      - 4319:4318 # OTLP http receiver
      - 55678:55679 # zpages extension
    restart: unless-stopped

  raft-gateway:
    container_name: asteroids_raft_gateway
    build:
      context: ../raft
      dockerfile: Raft.GateWay/Dockerfile
    environment:
      - NODE_ADDRESSES=http://raft-node-1:8080,http://raft-node-2:8080,http://raft-node-3:8080
      - NODE_IDS=asteroids_node_1,asteroids_node_2,asteroids_node_3

  raft-node-1:
    container_name: asteroids_node_1
    image: raft-node:latest
    build:
      context: ../raft
      dockerfile: Raft.Node/Dockerfile
    environment:
      - NODE_ID=asteroids_node_1
      - PEER_ADDRESSES=http://raft-node-2:8080,http://raft-node-3:8080
      - PEER_IDS=asteroids_node_2,asteroids_node_3

  raft-node-2:
    container_name: asteroids_node_2
    image: raft-node:latest
    build:
      context: ../raft
      dockerfile: Raft.Node/Dockerfile
    environment:
      - NODE_ID=asteroids_node_2
      - PEER_ADDRESSES=http://raft-node-1:8080,http://raft-node-3:8080
      - PEER_IDS=asteroids_node_1,asteroids_node_3

  raft-node-3:
    container_name: asteroids_node_3
    image: raft-node:latest
    environment:
      - NODE_ID=asteroids_node_3
      - PEER_ADDRESSES=http://raft-node-1:8080,http://raft-node-2:8080
      - PEER_IDS=asteroids_node_1,asteroids_node_2

volumes:
  grafana_data:
  prometheus_data:
  swag_config:
